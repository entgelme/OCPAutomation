- name: Patch ROTA attribute for OCP on Fyre stack
  hosts: bastion
  connection: local
  gather_facts: false
  module_defaults:
#  redhat.openshift.openshift:
#    host: https://{{ ocp_api }}:6443
#    ca_cert: ca.pem       
#  become: true

  vars:
    test: "Patch ROTA attribute for OCP on Fyre stack"

  tasks:
    - name: Greetings
      debug:
        msg: "Tasks to configure OCP for: {{ test }}"


    - name: Log in (obtain access token)
      redhat.openshift.openshift_auth:
        host: "{{ ocp_api_url }}"
        username: "kubeadmin"
        password: "{{ ocpw }}"
        validate_certs: false
      register: openshift_auth_results

# Apply MachineConfig 'worker-udev-configuration'
    - name: Apply worker-udev-configuration to change the ROTA attribute of node's extra disks (vdb, vdc) 
      kubernetes.core.k8s:
        state: present
        src: ./files/MachineConfig-worker-udev-configuration.yml



# Wait until worker0 is set unscheduable (this may take some minutes)
    - name: Wait until worker0 is set unscheduable (this may take some minutes)
      kubernetes.core.k8s_info:
        kind: Node
#        name: worker0.{{clustername}}.cp.fyre.ibm.com
        label_selectors:
          - node-role.kubernetes.io/worker
      register: node_list1
    - debug:
        var: node_list1
      # until: node_list1|json_query('resources[*].spec.unschedulable') == ["true"]
      # retries: 60
      # delay: 2
    - name: Count items in a list
      debug:
        msg: "{{ node_list1 | json_query('resources[*].spec.unschedulable') }}"

# # Wait until worker0 is schedulable again (this may take some minutes)
#     - name: Wait until worker0 is set unscheduable (this may take some minutes)
#       kubernetes.core.k8s_info:
#         kind: Node
#         name: worker0.{{clustername}}.cp.fyre.ibm.com
#       register: node_list2
#       until: node_list2|json_query('resources[*].spec')|unique == [{}]
#       retries: 60
#       delay: 2


#     - name: Login to Hub cluster
#       shell: oc login -u kubeadmin -p {{ ocpw }} --server={{ ocp_api_url }} --insecure-skip-tls-verify=true
#       no_log: true

#     - name: Wait until worker0 is down for reboot (this may take some minutes)
#       shell: oc wait --for=condition=Ready=Unknown --timeout=5m node worker0.{{ clustername }}.cp.fyre.ibm.com && echo "worker0 DOWN" 

#     - name: Wait until worker0 is up again after reboot (this may take some minutes)
#       shell: oc wait --for=condition=Ready=true --timeout=5m node worker0.{{ clustername }}.cp.fyre.ibm.com &&  echo "worker0 UP"              