---
- name: Configure OCP
  hosts: bastion
  connection: local
  gather_facts: false
  module_defaults:
#  redhat.openshift.openshift:
#    host: https://{{ ocp_api }}:6443
#    ca_cert: ca.pem       
#  become: true

  vars_files:
    - group_vars/web.yml

  vars:
    test: "Hallo"

  tasks:
    - name: Greetings
      debug:
        msg: "Ich sag mal {{ test }}"
        msg: "Das ocpw lautet {{ ocpw }}"

    - name: test shell command
      shell: echo "This command runs on "$(hostname)
 
    - name: Get environment variable from the shell
      ansible.builtin.debug:
        msg: "'{{ lookup('ansible.builtin.env', 'HOME') }}' is the HOME environment variable."

    - name: Login to Hub cluster
      shell: oc login -u kubeadmin -p {{ ocpw }} --server={{ ocp_api_url }} --insecure-skip-tls-verify=true

    - name: Log in (obtain access token)
      redhat.openshift.openshift_auth:
        host: "{{ ocp_api_url }}"
        username: "kubeadmin"
        password: "{{ ocpw }}"
        validate_certs: false
      register: openshift_auth_results

    - name: Create a k8s namespace
      k8s:
        state: present
        name: openshift-gitops-operator
        api_version: v1
        kind: Namespace
        resource_definition:
          metadata:
            labels: 
              openshift.io/cluster-monitoring: "true"

    - name: Create an Operator group for gitops 
      kubernetes.core.k8s:
        state: present
        src: ./files/gitops-operatorgroup.yml

    - name: Create a subscription for the gitops operator
      kubernetes.core.k8s:
        state: present
        src: ./files/openshift-gitops-sub.yml

# verify that all the pods in the openshift-gitops namespace are running
# ... (oc get pods -n openshift-gitops)
    - name: Wait for all pods running in openshift-gitops
      kubernetes.core.k8s_info:
        kind: Pod
        namespace: openshift-gitops 
      register: pod_list1
      until: pod_list1|json_query('resources[*].status.phase')|unique == ["Running"]
      retries: 60
      delay: 2

    # das isses noch nicht ganz. Wir wollen eigentlich wissen, ob 
    #    a) ein Rudel Pods erzeugt wurde
    # und
    #    b) alle in "phase": "Running" sind

# Verify that the pods in the openshift-gitops-operator namespace are running: 
# ... (oc get pods -n openshift-gitops-operator)
    - name: Wait for all pods running in openshift-gitops-operator
      kubernetes.core.k8s_info:
        kind: Pod
        namespace: openshift-gitops-operator 
      register: pod_list2
      until: pod_list2|json_query('resources[*].status.phase')|unique == ["Running"]

# Establish ArgoCD application(s): acm-hub
# Create namespace acm-hub
    - name: Create namespace acm-hub
      k8s:
        state: present
        name: acm-hub
        api_version: v1
        kind: Namespace
        resource_definition:
          metadata:
            labels: 
              openshift.io/cluster-monitoring: "true"

# Extend permissions for service account openshift-gitops-argocd-application-controller
# oc adm policy add-role-to-user admin system:serviceaccount:openshift-gitops:openshift-gitops-argocd-application-controller -n <namespace>
    - name: Extend permissions for service account openshift-gitops-argocd-application-controller
      shell: oc adm policy add-role-to-user admin system:serviceaccount:openshift-gitops:openshift-gitops-argocd-application-controller -n acm-hub

# Apply gitops-applicationset
    - name: Apply gitops-applicationset to deploy ACM 
      kubernetes.core.k8s:
        state: present
        src: ./files/gitops-applicationset.yml

# Setup htpasswd
    - name: Create htpasswd file
      shell: htpasswd -c -B -b htpasswd workshop-admin redhat 
    - name: Create secret with htpasswd content
      shell: oc create secret generic localusers --from-file htpasswd=htpasswd -n openshift-config
    - name: Enhance permissions for user workshop-admin 
      shell: oc adm policy add-cluster-role-to-user cluster-admin workshop-admin
    - name: patch oauth
      shell: oc get -o yaml oauth cluster > oauth.yaml